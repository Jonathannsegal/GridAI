{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/sdmay21-23/Hello_World_Projects/pwenzel/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { TestComponent } from './testComponent';\nimport Button from '@material-ui/core/Button';\nimport LineChart from 'react-linechart';\nimport '../node_modules/react-linechart/dist/styles.css';\n\nfunction App() {\n  let [currentTime, setCurrentTime] = useState(\"N/A\");\n  let [graph, setGraph] = useState(false);\n  let [graphMessage, setGraphMessage] = useState(\"Show Graph\");\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetch('/time').then(res => res.json()).then(data => {\n        setCurrentTime(data.time);\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const showGraph = () => {\n    setGraphMessage(!graph ? \"Unshow Graph\" : \"Show Graph\");\n    setGraph(!graph);\n  };\n\n  const data = [{\n    color: \"steelblue\",\n    points: [{\n      x: 1,\n      y: 2\n    }, {\n      x: 3,\n      y: 5\n    }, {\n      x: 7,\n      y: -3\n    }]\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      color: \"white\",\n      backgroundColor: \"gray\"\n    },\n    onClick: showGraph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, graphMessage), !graph ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TestComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, \" The date is \", currentTime, \".\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getPred,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"Predict\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"My First LineChart\"), /*#__PURE__*/React.createElement(LineChart, {\n    width: 600,\n    height: 400,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })))));\n}\n\nfunction getPred() {}\n\nexport default App;","map":{"version":3,"sources":["/home/ubuntu/Desktop/sdmay21-23/Hello_World_Projects/pwenzel/src/App.js"],"names":["React","useEffect","useState","TestComponent","Button","LineChart","App","currentTime","setCurrentTime","graph","setGraph","graphMessage","setGraphMessage","interval","setInterval","fetch","then","res","json","data","time","clearInterval","showGraph","color","points","x","y","backgroundColor","logo","getPred"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { TestComponent } from './testComponent'\nimport Button from '@material-ui/core/Button'\nimport LineChart from 'react-linechart';\nimport '../node_modules/react-linechart/dist/styles.css';\n\nfunction App() {\n  let [currentTime, setCurrentTime] = useState(\"N/A\");\n  let [graph, setGraph]  = useState(false)\n  let [graphMessage, setGraphMessage] = useState(\"Show Graph\")\n  useEffect(() => {\n    const interval = setInterval(() => {fetch('/time').then(res => res.json()).then(data => {\n      setCurrentTime(data.time);\n    })\n  }, 1000);\n  return () => clearInterval(interval);\n}, []);\n\n  const showGraph = () => {\n    setGraphMessage(!graph ? \"Unshow Graph\" : \"Show Graph\")\n    setGraph(!graph)\n  }\n\n  const data = [\n    {\t\t\t\t\t\t\t\t\t\n        color: \"steelblue\", \n        points: [{x: 1, y: 2}, {x: 3, y: 5}, {x: 7, y: -3}] \n    }\n]\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Button style={{color: \"white\", backgroundColor: \"gray\"}} onClick={showGraph}>{graphMessage}</Button>\n        { !graph ?\n            <>\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <TestComponent />\n              <p> The date is {currentTime}.</p>\n              <button onClick={getPred}>Predict</button>\n            </>\n        :\n        <div>\n                <div className=\"App\">\n                    <h1>My First LineChart</h1>\n                    <LineChart \n                        width={600}\n                        height={400}\n                        data={data}\n                    />\n                </div>\t\t\t\t\n            </div>\n      }\n      </header>\n    </div>\n  );\n}\n\nfunction getPred(){\n\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}